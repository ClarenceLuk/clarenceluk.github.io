{"version":3,"sources":["logo.svg","Menu/Menu.js","Applets/Weather.js","Applets/Home.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","console","log","menuBox","display","flexDirection","height","spacing","width","menuText","color","palette","text","secondary","Menu","classes","Drawer","open","className","BackdropProps","invisible","to","weatherBox","overflow","Weather","useState","latitude","setLatitude","longitude","setLongitude","weather","setWeather","navigator","geolocation","getCurrentPosition","position","coords","useEffect","weatherAPI","getForecast","then","data","properties","periods","catch","err","map","period","src","icon","name","temperature","shortForecast","detailedForecast","number","Home","appBox","left","displayBox","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAe,I,uCCUTA,EAAYC,aAAW,SAAAC,GAEzB,OADAC,QAAQC,IAAIF,GAEZ,CACIG,QAAS,CACLC,QAAS,OACTC,cAAe,SACfC,OAAQN,EAAMO,QAAQ,GACtBC,MAAOR,EAAMO,QAAQ,KAEzBE,SAAU,CACNC,MAAOV,EAAMW,QAAQC,KAAKC,eAiBvBC,EAbF,WACT,IAAMC,EAAUjB,IAEhB,OACI,8BACI,eAACkB,EAAA,EAAD,CAAQC,MAAI,EAACC,UAAWH,EAAQZ,QAASgB,cAAe,CAAEC,WAAW,GAArE,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,2B,mCC3BVvB,EAAYC,aAAW,SAAAC,GAEzB,OADAC,QAAQC,IAAIF,GAER,CACIsB,WAAY,CACRlB,QAAS,OACTC,cAAe,SACfkB,SAAU,cAsDXC,EA3CC,WACZ,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,qBAAlC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMhB,EAAUjB,IAiBhB,OAfAkC,UAAUC,YAAYC,oBAAmB,SAACC,GACtCR,EAAYQ,EAASC,OAAOV,UAC5BG,EAAaM,EAASC,OAAOR,cAGjCS,qBAAU,WACNC,IACCC,YAAY,UAAWb,EAAUE,GACjCY,MAAK,SAACC,GACHV,EAAWU,EAAKA,KAAKC,WAAWC,SAChC1C,QAAQC,IAAIuC,EAAKA,KAAKC,WAAWC,YAEpCC,OAAM,SAAAC,GAAG,OAAI5C,QAAQC,IAAI2C,QAC3B,CAACnB,EAAUE,IAGV,qBAAKV,UAAWH,EAAQO,WAAxB,SACKQ,EAAQgB,KAAI,SAAAC,GACT,OACI,cADK,CACL,iBACI,qBAAKC,IAAKD,EAAOE,OACjB,uBACCF,EAAOG,KACR,uBAJJ,iBAKmBH,EAAOI,YACtB,uBANJ,mBAOqBJ,EAAOK,cACxB,uBARJ,aASeL,EAAOM,mBATZN,EAAOO,c,OCtCtBC,G,OATF,WAET,OACI,2CCSFzD,EAAYC,aAAW,SAAAC,GAE3B,OADAC,QAAQC,IAAIF,GAEZ,CACEwD,OAAQ,CACNpD,QAAS,OACTC,cAAe,MACfG,MAAOR,EAAMO,QAAQ,KACrB4B,SAAU,WACVsB,KAAMzD,EAAMO,QAAQ,IACpBgB,SAAU,UAEZmC,WAAY,CACVnC,SAAU,UAEZpB,QAAS,CACPC,QAAS,OACTC,cAAe,SACfC,OAAQN,EAAMO,QAAQ,GACtBC,MAAOR,EAAMO,QAAQ,KAEvBE,SAAU,CACRC,MAAOV,EAAMW,QAAQC,KAAKC,eAqBjB8C,EAjBH,WACV,IAAM5C,EAAUjB,IAChB,OACE,cAAC,IAAD,UACE,sBAAKoB,UAAWH,EAAQyC,OAAxB,UACE,qBAAKtC,UAAWH,EAAQZ,QAAxB,SACE,cAAC,EAAD,MAEF,eAAC,IAAD,CAAQe,UAAWH,EAAQ2C,WAA3B,UACE,cAAC,IAAD,CAAOE,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,eCxC1CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b4a4796e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Drawer } from '@material-ui/core';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => {\n    console.log(theme)\n    return (\n    {\n        menuBox: {\n            display: 'flex',\n            flexDirection: 'column',\n            height: theme.spacing(0),\n            width: theme.spacing(11),\n        },\n        menuText: {\n            color: theme.palette.text.secondary,\n        },\n    })})\n\nconst Menu = () => {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Drawer open className={classes.menuBox} BackdropProps={{ invisible: true }}>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/Weather\">Weather</Link>\n            </Drawer>\n        </div>\n    )\n}\n\nexport default Menu","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport citiesAPI from \"cities\";\nimport weatherAPI from \"weather-gov-api\";\n\nconst useStyles = makeStyles(theme => {\n    console.log(theme)\n    return (\n        {\n            weatherBox: {\n                display: 'flex',\n                flexDirection: 'column',\n                overflow: 'scroll',\n            },\n        }\n        \n    )\n})\n\nconst getWeather = (latitude, longitude) => {\n    \n}\n\nconst Weather = () => {\n    const [latitude, setLatitude] = useState()\n    const [longitude, setLongitude] = useState()\n    const [weather, setWeather] = useState([])\n\n    const classes = useStyles();\n\n    navigator.geolocation.getCurrentPosition((position) => {\n        setLatitude(position.coords.latitude);\n        setLongitude(position.coords.longitude);\n    })\n\n    useEffect(() => {\n        weatherAPI\n        .getForecast(\"default\", latitude, longitude)\n        .then((data) => {\n            setWeather(data.data.properties.periods)\n            console.log(data.data.properties.periods)\n        })\n        .catch(err => console.log(err));\n    }, [latitude, longitude])\n\n    return (\n        <div className={classes.weatherBox}>\n            {weather.map(period => {\n                return ( //TODO: make a card that returns each element in a card\n                    <div key={period.number}>\n                        <img src={period.icon}/>\n                        <br/>\n                        {period.name}\n                        <br/>\n                        Temperature : {period.temperature}\n                        <br/>\n                        Short Forcast : {period.shortForecast}\n                        <br/>\n                        Forcast : {period.detailedForecast}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Weather","import React from 'react'\n\nconst Home = () => {\n\n    return (\n        <div>\n            Home!!\n        </div>\n    )\n}\n\nexport default Home","import logo from './logo.svg';\nimport './App.css';\nimport Menu from './Menu/Menu.js'\nimport Weather from './Applets/Weather.js'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core';\nimport { findByLabelText } from '@testing-library/react';\nimport Home from './Applets/Home';\n\nconst useStyles = makeStyles(theme => {\n  console.log(theme)\n  return (\n  {\n    appBox: {\n      display: 'flex',\n      flexDirection: 'row',\n      width: theme.spacing(100),\n      position: 'relative',\n      left: theme.spacing(10),\n      overflow: 'scroll',\n    },\n    displayBox: {\n      overflow: 'scroll',\n    },\n    menuBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: theme.spacing(0),\n      width: theme.spacing(15),\n    },\n    menuText: {\n      color: theme.palette.text.secondary,\n    },\n  })})\n\nconst App = () => {\n  const classes = useStyles()\n  return (\n    <Router>\n      <div className={classes.appBox}>\n        <div className={classes.menuBox}>\n          <Menu />\n        </div>\n        <Routes className={classes.displayBox}>\n          <Route path=\"/\" element={<Home/>}/>\n          <Route path=\"/Weather\" element={<Weather/>}/>\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https:// bit.ly/CRA-vitals\n//reportWebVitals(console.log);\n"],"sourceRoot":""}