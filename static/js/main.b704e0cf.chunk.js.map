{"version":3,"sources":["Menu/Menu.js","Applets/Home.js","Applets/WeatherComponents/WeatherCard.js","Applets/Weather.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","console","log","menuBox","display","flexDirection","position","top","height","spacing","minWidth","menuText","color","palette","text","secondary","Menu","classes","open","className","BackdropProps","invisible","variant","to","Home","cardBox","border","borderRadius","maxWidth","imgBox","width","basicDescription","WeatherCard","period","date","startTime","split","src","icon","name","temperature","temperatureUnit","shortForecast","windSpeed","windDirection","detailedForecast","weatherBox","Weather","useState","latitude","setLatitude","longitude","setLongitude","weather","setWeather","navigator","geolocation","getCurrentPosition","coords","useEffect","weatherAPI","getForecast","then","data","properties","periods","catch","err","finally","map","number","appBox","left","routeBox","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b704e0cf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Drawer } from '@material-ui/core';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => {\n    console.log(theme)\n    return (\n    {\n        menuBox: {\n            display: 'flex',\n            flexDirection: 'column',\n            position: 'absolute',\n            top: '2px',\n\n            height: theme.spacing(0),\n            minWidth: theme.spacing(15),\n        },\n        menuText: {\n            color: theme.palette.text.secondary,\n        },\n    })})\n\nconst Menu = () => {\n    const classes = useStyles();\n\n    return (\n        <div open className={classes.menuBox} BackdropProps={{ invisible: true }} variant='persistant'>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/Weather\">Weather</Link>\n        </div>\n    )\n}\n\nexport default Menu","import React from 'react'\n\nconst Home = () => {\n\n    return (\n        <div>\n            Home!!\n        </div>\n    )\n}\n\nexport default Home","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => {\n    return (\n        {\n            cardBox: {\n                display: 'flex',\n                flexDirection: 'column',\n                border: '1px solid black',\n                borderRadius: '5px',\n                maxWidth: theme.spacing(60),\n            },\n            imgBox: {\n                width: theme.spacing(10),\n            },\n            basicDescription: {\n                display: 'flex',\n                flexDirection: 'row',\n            }\n        }\n    )\n})\n\nconst WeatherCard = ({period}) => {\n    const classes = useStyles()\n\n    let date = period.startTime.split('T')[0].split('-')\n\n    return (\n        <div className={classes.cardBox}>\n            <div className={classes.basicDescription}>\n                <img className={classes.imgBox} src={period.icon} />\n                {period.name} - {date[1]}/{date[2]}/{date[0]}\n                <br/>\n                Temperature : {period.temperature} {period.temperatureUnit}\n                <br/>\n                Short Forcast : {period.shortForecast}\n                <br/>\n                Wind: {period.windSpeed} {period.windDirection}\n            </div>\n            <div>\n                Forcast : {period.detailedForecast}\n            </div>\n        </div>\n    )\n}\n\nexport default WeatherCard","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport citiesAPI from \"cities\";\nimport weatherAPI from \"weather-gov-api\";\nimport WeatherCard from './WeatherComponents/WeatherCard.js'\n\nconst useStyles = makeStyles(theme => {\n    return (\n        {\n            weatherBox: {\n                display: 'flex',\n                flexDirection: 'column',\n            },\n        }\n        \n    )\n})\n\nconst getWeather = (latitude, longitude) => {\n    \n}\n\nconst Weather = () => {\n    const [latitude, setLatitude] = useState()\n    const [longitude, setLongitude] = useState()\n    const [weather, setWeather] = useState([])\n\n    const classes = useStyles();\n\n    navigator.geolocation.getCurrentPosition((position) => {\n        setLatitude(position.coords.latitude);\n        setLongitude(position.coords.longitude);\n    })\n\n    useEffect(() => {\n        weatherAPI\n        .getForecast(\"default\", latitude, longitude)\n        .then((data) => {\n            setWeather(data.data.properties.periods)\n            console.log(data.data.properties.periods)\n        })\n        .catch(err => err).finally();\n    }, [latitude, longitude])\n\n    return (\n        <div className={classes.weatherBox}>\n            {weather.map(period => {\n                return (\n                    <WeatherCard period={period} key={period.number}/>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Weather","import './App.css';\nimport Menu from './Menu/Menu.js'\nimport Home from './Applets/Home';\nimport Weather from './Applets/Weather.js'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => {\n  console.log(theme)\n  return (\n  {\n    appBox: {\n      display: 'flex',\n      flexDirection: 'row',\n      maxWidth: theme.spacing(100),\n      left: theme.spacing(0),\n      top: theme.spacing(2),\n    },\n    menuBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'fixed',\n      top: theme.spacing(2),\n      left: theme.spacing(0)\n    },\n    menuText: {\n      color: theme.palette.text.secondary,\n    },\n    routeBox: {\n      display: 'flex',\n      position: 'relative',\n      left: theme.spacing(10),\n    },\n  })})\n\nconst App = () => {\n  const classes = useStyles()\n  return (\n    <Router>\n      <div className={classes.appBox}>\n        <div className={classes.menuBox}>\n          <Menu/>\n        </div>\n        <div className={classes.routeBox}>\n          <Routes>\n            <Route path=\"/\" element={<Home/>}/>\n            <Route path=\"/Weather\" element={<Weather/>}/>\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https:// bit.ly/CRA-vitals\n//reportWebVitals(console.log);\n"],"sourceRoot":""}